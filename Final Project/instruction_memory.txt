`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 04/24/2019 02:45:01 PM
// Design Name: 
// Module Name: instruction_memory
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module instruction_memory(address,clock,instrOut);
    wire[31:0]instr[255:0];
    input clock;
    input [7:0] address;
    output reg [31:0] instrOut;
    
    assign instr[0] = 32'b11110000010000000000000100000000; //ldpc
    assign instr[1] = 32'b00000000000000000000000000000000; //nop
    assign instr[2] = 32'b00000000000000000000000000000000; //nop
    assign instr[3] = 32'b01010000100000010000000000000000; //inc
    assign instr[4] = 32'b01100000110000010000000000000000; //neg
    assign instr[5] = 32'b11110010100000000000000000001001; //ldpc
    assign instr[6] = 32'b00000000000000000000000000000000; //nop
    assign instr[7] = 32'b00000000000000000000000000000000; //nop
    assign instr[8] = 32'b10110000000010100000000000000000; //brn
    assign instr[9] = 32'b00000000000000000000000000000000; //nop
    assign instr[10] = 32'b00000000000000000000000000000000; //nop
    assign instr[11] = 32'b00000000000000000000000000000000; //nop
    assign instr[12] = 32'b00000000000000000000000000000000; //nop
    assign instr[13] = 32'b01010000100000100000000000000000; //inc
    assign instr[14] = 32'b00110000000000010000010000000000; //st
    assign instr[15] = 32'b00000000000000000000000000000000; //nop
    assign instr[16] = 32'b00000000000000000000000000000000; //nop
    assign instr[17] = 32'b11100001000000010000000000000000; //ld
    assign instr[18] = 32'b00000000000000000000000000000000; //nop
    assign instr[19] = 32'b00000000000000000000000000000000; //nop
    assign instr[20] = 32'b01000001010000010000100000000000; //add
    assign instr[21] = 32'b01110001100001000000010000000000; //sub
    assign instr[22] = 32'b11110010110000000000000000001001; //ldpc
    assign instr[23] = 32'b00000000000000000000000000000000; //nop
    assign instr[24] = 32'b00000000000000000000000000000000; //nop
    assign instr[25] = 32'b10010000000010110000000000000000; //brz
    assign instr[26] = 32'b00000000000000000000000000000000; //nop
    assign instr[27] = 32'b00000000000000000000000000000000; //nop
    assign instr[28] = 32'b00000000000000000000000000000000; //nop
    assign instr[29] = 32'b00000000000000000000000000000000; //nop        
    assign instr[30] = 32'b01010000100000100000000000000000; //inc
    assign instr[31] = 32'b10100000000000010000000000000000; //jm
    assign instr[32] = 32'b00000000000000000000000000000000; //nop
    assign instr[33] = 32'b00000000000000000000000000000000; //nop
    assign instr[34] = 32'b10000000000000010000000000000000; //j
    
    always@(posedge clock)
    
    begin
        instrOut = instr[address];
    
    end  
endmodule
