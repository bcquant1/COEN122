`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 04/24/2019 05:17:21 PM
// Design Name: 
// Module Name: register
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module register(clock, write, rs, rt, rd, datain, rsout,rtout);
//initialization of variables
input clock;
input write;

input[5:0] rs;
input[5:0] rt;
input[5:0] rd;
input [31:0] datain;

reg[31:0] registers[63:0];

output reg [31:0] rsout;
output reg [31:0] rtout;

always@ (posedge clock)
begin
    if (write == 1) //checking if we need to write the datain into the registers
        registers[rd] = datain;
    if (write == 0) //if write is not 0, then get data of rs and rt into rsout and rtout
        begin
        rsout = registers[rs];
        rtout = registers[rt];
        end
end

endmodule
