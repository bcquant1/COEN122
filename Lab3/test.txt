`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 04/24/2019 05:57:41 PM
// Design Name: 
// Module Name: test
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module test();
reg clock;

reg [7:0] address;
wire [31:0] inst;
instruction testi(clock,address,inst);

reg write;
reg [5:0] rs;
reg [5:0] rt;
reg [5:0] rd;
reg [31:0] reg_datain;
wire [31:0] rsout;
wire [31:0] rtout;
register testr(clock,write,rs,rt,rd,reg_datain,rsout,rtout);

reg data_write;
reg read;
reg [31:0] data_address;
reg [31:0] data_datain;
wire [31:0] dataout;
data testd(clock,data_write,read,data_address,data_datain,dataout);

initial
begin
    clock = 0;
    forever #5 clock = ~clock;
end

initial
begin
//data testd(clock,data_write,read,data_address,data_datain,dataout);
    data_write = 1;
    read = 0;
    data_address = 2;
    data_datain = 7;
    
    #50
    data_write = 0;
    read = 1;
//instruction testi(clock,address,inst);   
    #50
    address = 100;
    
    #50
    address = 101;

//register testr(clock,write,rs,rt,rd,reg_datain,rsout,rtout);
    #50 
    write = 1;
    reg_datain = 10;
    rd = 10;
    
    #50
    reg_datain = 11;
    rd = 11;
    
    #50
    write = 0;
    rs = 10;
    rt = 11;
    
end


endmodule
