`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 05/22/2019 02:28:41 PM
// Design Name: 
// Module Name: alu
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module alu(A, B, Sel, Out, N, Z);
    input [31:0] A, B; //32 bit inputs
    input [3:0] Sel; //4 bit select
    output reg [31:0] Out; //32 bit output
    output reg N, Z; //flags
   
   always@(A, B, Sel)
   
   begin //loop which selects an operation to do based on the select
    if(Sel == 4'b0000) //add
        Out = A + B;
    if (Sel == 4'b0001) //increment
        Out = A + 1;
    if (Sel == 4'b0010) //negate
        Out = ~A + 1;
    if (Sel == 4'b0011) //subtract
        Out = A + (~B+1);
    if (Sel == 4'b0100) //pass value
        Out = A;
   end
   
   always@(Out)
   
   begin
    if (Sel != 4'b0100)
    begin
        if(Out == 0) //sets flag to true if value is zero
            Z = 1;
        else if(Out != 0) //false if not zero
            Z = 0;
        if(Out[31] == 1) //if MSB is one then it is negative
            N = 1;
        else if (Out[31] == 0) //not negative if otherwise
            N = 0;
    end
   end
    
        
        
endmodule